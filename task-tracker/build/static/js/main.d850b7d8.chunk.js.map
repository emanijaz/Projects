{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/CreateTask.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","title","toggleAddTaskFrom","showAddTaskFrom","Task","task","onTaskDelete","onTaskReminder","reminder","onDoubleClick","id","cursor","description","dayAndTime","Tasks","tasks","map","index","CreateTask","onAdd","useState","setTitle","setDescription","setDayAndTime","setReminder","onSubmit","e","preventDefault","console","log","alert","type","placeholder","value","onChange","target","checked","Footer","App","setTasks","showAddTaskForm","setShowAddTaskForm","a","fetch","method","filter","fetchTask","taskToToggle","updatedTask","headers","body","JSON","stringify","res","json","changedTask","addTask","newTask","useEffect","fetchTasks","tasksFromServer","getTasks","data","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d850b7d8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nconst Button = ({text, color, onClick}) => {\n  \n    return(\n        <button onClick={onClick} className='btn' style={{backgroundColor: color}}> {text}</button>\n    )\n}\nButton.defaultProps = {\n    color: 'Blue',\n}\nButton.propTypes = {\n    text: PropTypes.string.isRequired,  \n    color: PropTypes.string.isRequired,\n    onClick: PropTypes.func\n}\nexport default Button","import Button from './Button'\nimport {useLocation} from 'react-router-dom'\nconst Header = ({title, toggleAddTaskFrom, showAddTaskFrom}) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n           \n            <Button text={showAddTaskFrom ? 'Close' : 'Add'} color={showAddTaskFrom ? 'Red':'Green'}  onClick={toggleAddTaskFrom}/>\n            \n        </header>\n    )\n}\n\nexport default Header\n","import { FaTimes }  from 'react-icons/fa'\n\nfunction Task({task, onTaskDelete, onTaskReminder}) {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`}  onDoubleClick={() => onTaskReminder(task.id)}>\n        <h3 >\n           {task.title}<FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onTaskDelete(task.id)} />\n        </h3> \n       <p>{task.description}</p>\n       <p>{task.dayAndTime}</p>\n       \n\n    </div>\n  )\n}\n\n\nexport default Task\n\n","\nimport Task from './Task'\n\nconst Tasks = ({tasks, onTaskDelete, onTaskReminder}) => {\n \n  return (\n    <>\n      {tasks.map((task, index) => (\n        <Task key={index} task = {task} onTaskDelete={onTaskDelete} onTaskReminder={onTaskReminder}/>   \n      ))}\n    </>\n  )\n}\n\n\n\nexport default Tasks\n","import { useState } from 'react'\n\nfunction CreateTask({onAdd}) {\n\n\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [dayAndTime, setDayAndTime] = useState('')\n    const [reminder, setReminder] = useState(true)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!title){\n            alert('Please add Title ');\n            return;\n        }\n        if(!description){\n            alert('Please add Description ');\n            return;\n        }\n        if(!dayAndTime){\n            alert('Please add Day and Time ');\n            return;\n        }\n        console.log(dayAndTime)\n        onAdd({title, description, dayAndTime, reminder});\n\n        // clearing fields\n        setTitle('');\n        setDescription('');\n        setDayAndTime('');\n        setReminder(false);\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Title</label>\n                <input type='text' placeholder='Title' value={title} onChange={(e) => setTitle(e.target.value)}></input>\n            </div>\n\n            <div className='form-control'>\n                <label>Description</label>\n                <input type='text' placeholder='Description' value={description} onChange={(e)=> setDescription(e.target.value)}></input>\n            </div>\n\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type='text' placeholder='Add Day and Time' value={dayAndTime} onChange={(e) => setDayAndTime(e.target.value)}></input>\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.target.checked)}></input>\n            </div>\n\n            <input type='submit' value='Add Task' className='btn btn-block'></input>\n\n        </form>\n    )\n}\n\n\nexport default CreateTask\n\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n      \n\t\t<p>Copyright &copy; 2021</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport CreateTask from './components/CreateTask'\nimport Footer from './components/Footer'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([])\n  \n  const [showAddTaskForm, setShowAddTaskForm] = useState(false)\n\n  const onTaskDelete = async (id) => {\n\n    // deleting from json-server\n    await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'})\n    // deleteing from UI\n    setTasks(tasks.filter((task)=> (task.id!==id)))\n  }\n  const onTaskReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n    console.log(' task  to toggle: ', taskToToggle)\n\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify(updatedTask), \n    })\n\n    const changedTask = await res.json()\n    console.log('changed task : ', changedTask)\n    setTasks(tasks.map((task)=> task.id === id ? { ...task, reminder: changedTask.reminder } : task))\n  }\n\n  const addTask = async (task) => {\n      const res = await fetch('http://localhost:5000/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(task)\n      })\n\n      const newTask = await res.json()\n      setTasks([...tasks, newTask])\n\n  }\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch  All Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  // Fecth Single Task via id\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header title='Tasks Lists' showAddTaskFrom = {showAddTaskForm} toggleAddTaskFrom={() => {setShowAddTaskForm(!showAddTaskForm)}}/>\n       \n        <>\n            { showAddTaskForm && <CreateTask onAdd={addTask}/>}\n            {tasks.length > 0 ? (<Tasks tasks={tasks} onTaskDelete = {onTaskDelete} onTaskReminder={onTaskReminder}/>) : ('No Tasks Found')}\n\n        </>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}